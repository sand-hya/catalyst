name: Sign File and Blobs Using Cosign
on:
  push:
    branches:
      - master
      - develop/*
      
    # paths-ignore:
    #   - '**/README.md'
    #   - '.github/**'
    #   - 'main'
      
  workflow_dispatch:
        inputs:
            repo_url:
                description: 'Repository URL'
                required: true
            target_directory:
                description: 'Target Directory'
                required: true
            file_to_sign:
                description: Which file you would like to sign ? please provide (Path/to/fileName)
                required: true
jobs:
  Cosign-Sign-and-Verify-Files:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
        id-token: write
      name: Install Cosign
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
            
        - name: Clone user-given repository
          run: |
            REPO_URL=$INPUT_REPO_URL
            TARGET_DIRECTORY=$INPUT_TARGET_DIRECTORY
            echo "$REPO_URL"
            echo "Cloning repository from $REPO_URL into $TARGET_DIRECTORY"
            git clone $REPO_URL $TARGET_DIRECTORY
          env:
              INPUT_REPO_URL: ${{ github.event.inputs.repo_url }}
              INPUT_TARGET_DIRECTORY: ${{ github.event.inputs.target_directory }}

        - name: Show Folder Content
          run: |
            echo "Workspace Path: $GITHUB_WORKSPACE"
            pwd
            ls -al $INPUT_TARGET_DIRECTORY
            cd $INPUT_TARGET_DIRECTORY

        - name: Install Cosign
          uses: sigstore/cosign-installer@v3.3.0
          
        ## Needed below step if you need to create a New key pair. 
        ## Remmember it will ask for a password from the prom which is not convinient for the current use case
        # - name: Generating a Key pair for CoSign
        #   run: |
        #       cosign generate-key-pair --output-key-prefix coSignKey

        - name: Signing file with a key
          run: |
              cosign sign-blob $FILE_TO_SIGN --output-signature $signatureFileName -y --key env://COSIGN_PRIVATE_KEY
              echo "cosign sign-blob $FILE_TO_SIGN --output-signature $signatureFileName -y --key env://COSIGN_PRIVATE_KEY"
          env:
            FILE_TO_SIGN: ${{ github.event.inputs.file_to_sign }}
            COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
            COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}
            COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
